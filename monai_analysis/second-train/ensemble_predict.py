#/usr/bin/env python

import json
import os
from monai.apps.auto3dseg import (
    AlgoEnsembleBestN,
    AlgoEnsembleBuilder,
    import_bundle_algo_history,
)
from monai.utils.enums import AlgoKeys
import optparse
import shutil

usage = "usage: %prog [options] input output"
parser = optparse.OptionParser(usage=usage)
parser.add_option("-v", "--verbose", dest="verbose",
        action="store_true", default=False, help="Increase verbosity")

(options, args) = parser.parse_args()


infile = args[0]
outfile = args[1]

shutil.copy(args[0], '/work/input.nii.gz')


datalist = {
    "testing": [{"image": "input.nii.gz"}]
}

datalist_file = os.path.join("/work", "datalist.json")
with open(datalist_file, "w") as f:
    json.dump(datalist, f)


task = {
  "name": "infer_cp",
  "task": "segmentation",
  "modality": "MRI",
  "datalist": "/work/datalist.json",
  "dataroot": "/work",
}

task_file = os.path.join("/work", "task.json")
with open(task_file, "w") as f:
    json.dump(task, f)

# Assuming you have already trained the models

work_dir = "/home/ec2-user/choroid_plexus/cp_work_dir_20231215"  # the algorithm working directory generated by AlgoGen/BundleGen
input_cfg = "/work/task.json"  # path to the task input YAML file created by the users

history = import_bundle_algo_history(work_dir, only_trained=True)

## model ensemble
n_best = 5
builder = AlgoEnsembleBuilder(history, input_cfg)
builder.set_ensemble_method(AlgoEnsembleBestN(n_best=n_best))
ensemble = builder.get_ensemble()
pred = ensemble(pred_param = {"image_save_func": {"_target_": "SaveImage", "output_dir": "/work"}})

shutil.copy('/work/input/input_trans.nii.gz', outfile)
    